# agentic_rag_pipeline/run.py

import argparse
import pprint # Library ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏û‡∏¥‡∏°‡∏û‡πå Dictionary ‡∏™‡∏ß‡∏¢‡πÜ

# --- Import "‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô" (Graph) ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ ---
from agentic_rag_pipeline.graph_agent.graph import graph_app

def main():
    """
    ‡∏ô‡∏µ‡πà‡∏Ñ‡∏∑‡∏≠ "‡∏õ‡∏∏‡πà‡∏° Start" ‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤
    """
    # --- 1. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö Argument ‡∏à‡∏≤‡∏Å Command Line ---
    parser = argparse.ArgumentParser(
        description="Run the Agentic RAG Pipeline with LangGraph."
    )
    parser.add_argument(
        "file_path",
        type=str,
        help="The full path to the document file you want to process."
    )
    args = parser.parse_args()

    print(f"--- üöÄ Starting Agentic Pipeline for: {args.file_path} ---")

    # --- 2. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° "‡∏ñ‡∏≤‡∏î" (State) ‡πÉ‡∏ö‡πÅ‡∏£‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡πà‡∏á‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô ---
    initial_state = {
        "file_path": args.file_path,
        "original_filename": "",
        "clean_text": "",
        "metadata": {},
        "chunks": [],
        "error_message": None,
        "validation_passes": 0,
        "retry_history": [],
        
    }

    # --- 3. ‡∏™‡πà‡∏á "‡∏ñ‡∏≤‡∏î" ‡πÄ‡∏Ç‡πâ‡∏≤‡πÇ‡∏£‡∏á‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô! ---
    # .invoke() ‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á "Start"
    final_state = graph_app.invoke(initial_state)

    # --- 4. ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å "‡∏ñ‡∏≤‡∏î" ‡πÉ‡∏ö‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ ---
    print("\n" + "="*50)
    print("--- üéâ Pipeline Finished! Final State: ---")
    pprint.pprint(final_state)
    print("="*50)


if __name__ == "__main__":
    main()